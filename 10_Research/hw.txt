1.
The resulting network is still secure since the private key is stored
in a local address on my server, so the other teams have no way of
finding out the private key.

(1)
The resulting network is still secure since the other teams are not
capable of finding or reproducing the same private key that I got, even 
if they enter the same passphrase as I did.

(2)
The resulting network is not secure since my private key will be stored
in the USB where the other teams have control of and can access. Once
they obtain the private key in the system, they will be able to decrypt
all encrypted information.

2.
“gpg —verify” only verifies if the file matches with the intended 
signature. It does not verify where the file is originated from. This is
because the verification passes as long as the signature corresponds to 
the public key, which can both be modified. Therefore, gpg cannot identify 
which public key represents the right person.

To fix this problem, we can record the public key in a safe and trusted 
address when we create a file, so we can later verify if the signature 
and public key are modified.
